version: '3.8'
name: mongodb-replica-set-nbd

services:
  mongo_1:
    build: .
    image: custom-mongo:8.0.1
    container_name: mongodb1
    hostname: mongodb1
    networks:
      - mongonet
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    command: --config /etc/mongod.conf --port 27017
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 2s
      retries: 5
    volumes:
      - mongo-db-data-1:/data/db
      - mongo-configdb-data-1:/data/configdb
    

  mongo_2:
    build: .
    image: custom-mongo:8.0.1
    container_name: mongodb2
    hostname: mongodb2
    networks:
      - mongonet
    ports:
      - '27018:27018'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    command: --config /etc/mongod.conf --port 27018
    healthcheck:
      test: [ "CMD", "mongosh","--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 2s
      retries: 5
    volumes:
      - mongo-db-data-2:/data/db
      - mongo-configdb-data-2:/data/configdb

  mongo_3:
    build: .
    image: custom-mongo:8.0.1
    container_name: mongodb3
    hostname: mongodb3
    networks:
      - mongonet
    ports:
      - '27019:27019'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    command: --config /etc/mongod.conf --port 27019
    healthcheck:
      test: [ "CMD", "mongosh","--port", "27019", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 2s
      retries: 5
    volumes:
      - mongo-db-data-3:/data/db
      - mongo-configdb-data-3:/data/configdb
  
  mongoinit:
    build: .
    image: custom-mongo:8.0.1
    hostname: mongodbinit
    container_name: mongodbinit
    networks:
      - mongonet
    depends_on:
      mongo_1:
        condition: service_healthy
      mongo_2:
        condition: service_healthy
      mongo_3:
        condition: service_healthy
    command: >
      mongosh --host mongodb1:27017 --username admin --password adminpassword --authenticationDatabase admin --eval
      '
        rs.initiate({
          _id: "replica_set_single",
          version: 1,
          members: [
            {_id: 0, host : "mongodb1:27017"},
            {_id: 1, host : "mongodb2:27018"},
            {_id: 2, host : "mongodb3:27019"}
          ]
        });
      '
    volumes:
      - mongo-db-data-init:/data/db
      - mongo-configdb-data-init:/data/configdb


volumes:
  mongo-db-data-1:
  mongo-configdb-data-1:
  mongo-db-data-2:
  mongo-configdb-data-2:
  mongo-db-data-3:
  mongo-configdb-data-3:
  mongo-db-data-init:
  mongo-configdb-data-init:
  
networks:
  mongonet: { }